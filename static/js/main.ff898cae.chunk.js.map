{"version":3,"sources":["assets/loader.gif","components/HolidayTable.js","components/HolidayLists.js","components/HolidayForm.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","HolidayLists","react_default","a","createElement","colSpan","this","props","data","month","toUpperCase","holiday","map","v","i","key","date","type","name","description","renderTableHeader","renderTableData","Component","holidaysDataItems","holidaysData","item","index","HolidayTable","id","country","year","HolidayForm","_this","Object","classCallCheck","_super","call","state","selcountry","selyear","isLoading","isLoaded","isDataEmpty","error","filteredHolidayList","handleChange","bind","assertThisInitialized","handleSubmit","event","_this$setState","target","selName","setState","defineProperty","value","options","selectedIndex","text","preventDefault","fetchHolidays","isEmpty","undefined","newArr","forEach","dataitem","obj","iso","day","datetime","push","result","_","chain","groupBy","toPairs","currentData","zipObject","console","log","_this2","holidayUrl","fetch","then","response","json","filterList","holidays","catch","loaderImg","className","src","loader","alt","errorMsg","allYears","x","yearList","onSubmit","onChange","components_HolidayLists","App","HolidayForm_HolidayForm","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ff898cae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.968d3a4a.gif\";","import React, { Component } from \"react\";\r\n\r\nclass HolidayLists extends Component {\r\n\r\n    renderTableHeader() {\r\n        return <th colSpan=\"4\">{this.props.data.month.toUpperCase()}</th>\r\n    }\r\n   \r\n    renderTableData() {\r\n        return this.props.data.holiday.map((v, i) => {\r\n            return (\r\n                <tr key={i}>\r\n                    <td>{v.date}</td>\r\n                    <td>{v.type}</td>\r\n                    <td>{v.name}</td>\r\n                    <td>{v.description}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tbody>\r\n                <tr>{this.renderTableHeader()}</tr>\r\n                {this.renderTableData()}\r\n            </tbody>\r\n        )\r\n      }\r\n}\r\n\r\nexport default HolidayLists;","import React, { Component } from \"react\";\r\nimport HolidayTable from './HolidayTable';\r\n\r\nclass HolidayLists extends Component {\r\n  \r\n  render() {\r\n    //console.log(this.props.holidaysData);\r\n    const holidaysDataItems = this.props.holidaysData.map((item, index) =>\r\n        <HolidayTable data={item} key={index}/>\r\n    );\r\n     return (\r\n         <div>\r\n            <h2 id='subTitle'>{this.props.country} (Year {this.props.year}) Holiday List</h2>\r\n            <table id='holidayTable'>\r\n                {holidaysDataItems}\r\n            </table>\r\n          </div>\r\n     )\r\n  }\r\n}\r\n\r\nexport default HolidayLists;","import React, { Component } from 'react';\r\nimport HolidayLists from './HolidayLists';\r\n\r\nimport _ from 'lodash';\r\nimport loader from '../assets/loader.gif';\r\n\r\n//const countryCodes = [{'us' : 'Unites States'}, {'gb' : 'Great Britain'}, {'fr' : 'France'}, {'de' : 'Germany'}, {'id' : 'Indonesia'}];\r\n\r\nexport default class HolidayForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            country: '',\r\n            year: '',\r\n            selcountry: '',\r\n            selyear: '',\r\n            isLoading: false,\r\n            isLoaded: false,\r\n            isDataEmpty: null,\r\n            error: null,\r\n            //rawHolidayList: [],\r\n            filteredHolidayList: []\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n        const selName = 'sel' + event.target.name;\r\n\r\n        this.setState({\r\n            [name]: event.target.value,\r\n            [selName]: event.target.options[event.target.selectedIndex].text\r\n        });\r\n\r\n        //console.log([selName] +' : '+ event.target.options[event.target.selectedIndex].text);\r\n    }\r\n    \r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.fetchHolidays();\r\n    }\r\n\r\n    //function to filter the json data\r\n    filterList(data) {\r\n\r\n        //console.log('data : ' + data);\r\n        let isEmpty = (data === undefined) ? true : false;\r\n        this.setState({\r\n            isDataEmpty: isEmpty\r\n        })\r\n        //console.log(this.state.isDataEmpty);\r\n\r\n        let newArr = [];\r\n        data.forEach((dataitem) => {\r\n            let obj = {\r\n                name: dataitem.name,\r\n                description: dataitem.description,\r\n                date: dataitem.date.iso,\r\n                day: dataitem.date.datetime.day,\r\n                month: '',\r\n                year: dataitem.date.datetime.year,\r\n                type: dataitem.type[0]\r\n            };\r\n            let months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\r\n            obj.month = months[dataitem.date.datetime.month - 1];\r\n            newArr.push(obj);\r\n        });\r\n\r\n        //console.log(newArr);\r\n\r\n        const result = _.chain(newArr)\r\n            .groupBy(\"month\")\r\n            .toPairs()\r\n            .map(function(currentData){\r\n            return _.zipObject([\"month\", \"holiday\"], currentData);\r\n            })\r\n            .value();\r\n\r\n        this.setState({\r\n            filteredHolidayList: result\r\n        });\r\n\r\n        console.log(this.state.filteredHolidayList);\r\n    }\r\n\r\n    //api call on the click of submit button\r\n    fetchHolidays() {\r\n        const holidayUrl = 'https://calendarific.com/api/v2/holidays?api_key=eb00d5d925e8a5428754bcbdef9a88f327a921c4&country=' + this.state.country + '&year=' + this.state.year;\r\n\r\n        console.log(holidayUrl);\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        fetch(holidayUrl)\r\n          .then(response => response.json())\r\n          .then(\r\n            data => {\r\n                //function call to filter data\r\n                this.filterList(data.response.holidays)\r\n                this.setState({\r\n                    isLoading: false,\r\n                    isLoaded: true\r\n                })\r\n            }\r\n          )\r\n          .catch(error =>  this.setState({error: true, isDataEmpty: true, isLoading: false, isLoaded: false}) );\r\n    }\r\n\r\n    render() {\r\n        const loaderImg = this.state.isLoading ? <img className=\"loader\" src={loader} alt='' /> : null;\r\n\r\n        const errorMsg = this.state.isDataEmpty ? <p className=\"emptyMsg\">There are no Holidays details available for current selection.</p> : null;\r\n\r\n        let maxOffset = 99, startYear = 1950;\r\n        let allYears = [];\r\n        for(let x = 0; x <= maxOffset; x++) {\r\n            allYears.push(startYear + x)\r\n        }\r\n        const yearList = allYears.map((x) => {return(<option key={x}>{x}</option>)});\r\n        return (\r\n            <div>\r\n                <h1 id='title'>Holiday App</h1>\r\n                <div className=\"container\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label>\r\n                            Select Your Country:\r\n                            <select name=\"country\" id=\"country\" value={this.state.country} onChange={this.handleChange}>\r\n                                <option value=\"\">---Select Country ---</option>\r\n                                <option value=\"in\">India</option>\r\n                                <option value=\"us\">Unites States</option>\r\n                                <option value=\"gb\">Great Britain</option>\r\n                                <option value=\"fr\">France</option>\r\n                                <option value=\"de\">Germany</option>\r\n                                <option value=\"id\">Indonesia</option>\r\n                            </select>\r\n                        </label>\r\n                        <label>\r\n                            Select Year:\r\n                            <select name=\"year\" id=\"year\" value={this.state.year} onChange={this.handleChange}>\r\n                                <option value=\"\">---Select Year ---</option>\r\n                                {yearList}\r\n                            </select>\r\n                        </label>\r\n                        <input type=\"submit\" value=\"Submit\" className=\"btn\"/>\r\n                    </form>\r\n                    {loaderImg}\r\n                    {errorMsg}\r\n                    {this.state.isLoaded && !this.state.isLoading && (this.state.filteredHolidayList !== undefined) && \r\n                        <HolidayLists holidaysData={this.state.filteredHolidayList} country={this.state.selcountry} year={this.state.selyear} />}\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport HolidayForm from './components/HolidayForm';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    return (\r\n      <div className=\"App\">\r\n        <HolidayForm />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render( < App /> , document.getElementById('root'));"],"sourceRoot":""}